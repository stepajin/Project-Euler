// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

struct Fibbonaci: Sequence, IteratorProtocol {
    private var first: Int = 0
    private var second: Int = 1

    private let max: Int

    init(max: Int) {
        self.max = max
    }

    mutating func next() -> Int? {
        let result = first + second
        guard result < max else { return nil }
        first = second
        second = result
        return result
    }
}

let result = Fibbonaci(max: 4000000)
    .lazy
    .filter { $0 % 2 == 0 }
    .reduce(0, +)

print(result)
